{"version":3,"sources":["../../core/module.js"],"names":["Respone","DataBase","mysql","require","connection","createConnection","host","user","password","port","database","connect","err","console","log","Promise","resolve","reject","query","rows","fields","end"],"mappings":";;;;;;;;AAAA;;IAAaA,O;;;;;;IAEQC,Q;;AAEjB;;;AAGA,wBAAa;AAAA;;AACT;AACA,YAAIC,QAASC,QAAQ,OAAR,CAAb,CAFS,CAEuB;AAChC;AACA,aAAKC,UAAL,GAAkBF,MAAMG,gBAAN,CAAuB;AACrCC,kBAAM,WAD+B,EACZ;AACzBC,kBAAM,MAF+B,EAET;AAC5BC,sBAAU,MAH2B,EAGZ;AACzBC,kBAAM,MAJ+B,EAIL;AAChCC,sBAAU;AAL2B,SAAvB,CAAlB;;AAQA,aAAKC,OAAL;AACH;;AAED;;;;;;;kCAGU;AACN;AACA,iBAAKP,UAAL,CAAgBO,OAAhB,CAAwB,UAASC,GAAT,EAAa;AACjC,oBAAGA,GAAH,EAAO;AACHC,4BAAQC,GAAR,CAAY,gBAAcF,GAA1B;AACA;AACH;AACDC,wBAAQC,GAAR,CAAY,gCAAZ;AACH,aAND;AAOH;;AAED;;;;;;iCAGQ;AAAA;;AACJ,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjC,sBAAKb,UAAL,CAAgBc,KAAhB,CAAsB,uBAAtB,EAA8C,UAASN,GAAT,EAAaO,IAAb,EAAkBC,MAAlB,EAAyB;AACnE,wBAAGR,GAAH,EAAO;AACHK,+BAAOL,GAAP;AACA;AACH;;AAEDI,4BAAQG,IAAR;AACH,iBAPD;AAQH,aATM,CAAP;AAWH;;AAED;;;;;;gCAGO;AACH;AACA,iBAAKf,UAAL,CAAgBiB,GAAhB,CAAoB,UAAST,GAAT,EAAa;AAC7B,oBAAGA,GAAH,EAAO;AACH;AACH;AACDC,wBAAQC,GAAR,CAAY,2BAAZ;AACH,aALD;AAMH;;;;;;kBA9DgBb,Q","file":"module.js","sourcesContent":["import  * as Respone from './resp_func'\r\n\r\nexport default class DataBase{\r\n\r\n    /**\r\n     * 构造函数中引用mysql模块，并且创建连接\r\n     */\r\n    constructor(){\r\n        //测试mysql\r\n        var mysql  = require('mysql');  //调用MySQL模块\r\n        //创建一个connection\r\n        this.connection = mysql.createConnection({\r\n            host: '127.0.0.1',       //主机\r\n            user: 'root',               //MySQL认证用户名\r\n            password: 'root',        //MySQL认证用户密码\r\n            port: '3306',                   //端口号\r\n            database: 'keep2iron'\r\n        });\r\n\r\n        this.connect();\r\n    }\r\n\r\n    /**\r\n     * 连接mysql\r\n     */\r\n    connect() {\r\n        //创建一个connection\r\n        this.connection.connect(function(err){\r\n            if(err){\r\n                console.log('[query] - :'+err);\r\n                return;\r\n            }\r\n            console.log('[connection connect]  succeed!');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取数据库中的维护的app\r\n     */\r\n    getApp(){\r\n        return new Promise((resolve,reject)=>{\r\n            this.connection.query('SELECT * FROM tbl_app',function(err,rows,fields){\r\n                if(err){\r\n                    reject(err);\r\n                    return;\r\n                }\r\n\r\n                resolve(rows);\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * 执行关闭当前连接对象\r\n     */\r\n    close(){\r\n        //关闭connection\r\n        this.connection.end(function(err){\r\n            if(err){\r\n                return;\r\n            }\r\n            console.log('[connection end] succeed!');\r\n        });\r\n    }\r\n}"]}